{"version":3,"file":"WebBrowser-test.js","sourceRoot":"","sources":["../../src/__tests__/WebBrowser-test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,UAAU,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAE9F,MAAM,eAAe,GAAG;IACtB,IAAI,EAAE,QAAQ;CACf,CAAC;AAEF,SAAS,UAAU;IACjB,YAAY,CACV,aAAa,CAAC,kBAAkB,EAChC,kBAAkB,EAClB,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,eAAe,CAAC,CACrC,CAAC;AACJ,CAAC;AAED,qBAAqB,CAAC,YAAY,EAAE,GAAG,EAAE;IACvC,UAAU,CAAC,GAAG,EAAE;QACd,UAAU,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,mBAAmB,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,IAAI,UAAU,GAAG,MAAM,UAAU,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACrE,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC5C,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAC5E,gBAAgB,CACjB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC,IAAI,WAAW,GAAG,UAAU,CAAC,cAAc,EAAE,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NativeModules } from 'react-native';\nimport WebBrowser from '../WebBrowser';\n\nimport { mockProperty, unmockAllProperties, describeCrossPlatform } from '../../test/mocking';\n\nconst fakeReturnValue = {\n  type: 'cancel',\n};\n\nfunction applyMocks() {\n  mockProperty(\n    NativeModules.ExponentWebBrowser,\n    'openBrowserAsync',\n    jest.fn(async () => fakeReturnValue)\n  );\n}\n\ndescribeCrossPlatform('WebBrowser', () => {\n  beforeEach(() => {\n    applyMocks();\n  });\n\n  afterEach(() => {\n    unmockAllProperties();\n  });\n\n  it('openBrowserAsync returns correctly', async () => {\n    let openResult = await WebBrowser.openBrowserAsync('http://expo.io');\n    expect(openResult).toEqual(fakeReturnValue);\n    expect(NativeModules.ExponentWebBrowser.openBrowserAsync).toHaveBeenCalledWith(\n      'http://expo.io'\n    );\n  });\n\n  it('dismissBrowser returns nothing', () => {\n    let closeResult = WebBrowser.dismissBrowser();\n    expect(closeResult).toBeUndefined();\n    expect(NativeModules.ExponentWebBrowser.dismissBrowser).toHaveBeenCalledTimes(1);\n  });\n});\n"]}