{"version":3,"file":"Facebook-test.js","sourceRoot":"","sources":["../../src/__tests__/Facebook-test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,KAAK,QAAQ,MAAM,aAAa,CAAC;AAExC,OAAO,EAAE,qBAAqB,EAAE,YAAY,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAE9F,MAAM,eAAe,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;AAE9C,SAAS,UAAU;IACjB,YAAY,CACV,aAAa,CAAC,kBAAkB,EAChC,kBAAkB,EAClB,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,eAAe,CAAC,CACrC,CAAC;IACF,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,qBAAqB,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5C,UAAU,CAAC,GAAG,EAAE;QACd,UAAU,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,mBAAmB,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,QAAQ,CAAC,6BAA6B,CAAC,OAAO,EAAE;YAC9C,WAAW,EAAE,CAAC,OAAO,CAAC;SACvB,CAAC,CAAC;QACH,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,oBAAoB,CACvF,OAAO,EACP,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,EAAE,CAC3B,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,QAAQ,CAAC,6BAA6B,CAAC,IAAW,EAAE;YAClD,WAAW,EAAE,CAAC,OAAO,CAAC;SACvB,CAAC,CAAC;QACH,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,oBAAoB,CACvF,MAAM,EACN,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,EAAE,CAC3B,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAE,OAAO,CAAC,IAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NativeModules } from 'react-native';\nimport * as Facebook from '../Facebook';\n\nimport { describeCrossPlatform, mockProperty, unmockAllProperties } from '../../test/mocking';\n\nconst fakeReturnValue = { type: 'dismissed' };\n\nfunction applyMocks() {\n  mockProperty(\n    NativeModules.ExponentWebBrowser,\n    'openBrowserAsync',\n    jest.fn(async () => fakeReturnValue)\n  );\n  mockProperty(console, 'warn', jest.fn(() => {}));\n}\n\ndescribeCrossPlatform('iOS and Android', () => {\n  beforeEach(() => {\n    applyMocks();\n  });\n\n  afterEach(() => {\n    unmockAllProperties();\n  });\n\n  it('calls with correct parameters', () => {\n    Facebook.logInWithReadPermissionsAsync('appId', {\n      permissions: ['email'],\n    });\n    expect(NativeModules.ExponentFacebook.logInWithReadPermissionsAsync).toHaveBeenCalledWith(\n      'appId',\n      { permissions: ['email'] }\n    );\n  });\n\n  it('converts to appId string when called with a number parameter', () => {\n    Facebook.logInWithReadPermissionsAsync(1234 as any, {\n      permissions: ['email'],\n    });\n    expect(NativeModules.ExponentFacebook.logInWithReadPermissionsAsync).toHaveBeenCalledWith(\n      '1234',\n      { permissions: ['email'] }\n    );\n    expect(console.warn).toHaveBeenCalledTimes(1);\n    expect((console.warn as jest.Mock).mock.calls[0][0]).toMatchSnapshot('warning');\n  });\n});\n"]}