{"version":3,"file":"SecureStore-test.js","sourceRoot":"","sources":["../../src/__tests__/SecureStore-test.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModules } from 'react-native';\nimport * as SecureStore from '../SecureStore';\n\nimport { mockPlatformIOS } from '../../test/mocking';\n\nit(`sets values`, async () => {\n  const testKey = 'key-test_0.0';\n  const testValue = 'value `~!@#$%^&*();:\\'\"-_.,<>';\n  const options = { keychainService: 'test' };\n  await SecureStore.setItemAsync(testKey, testValue, options);\n\n  expect(NativeModules.ExponentSecureStore.setValueWithKeyAsync).toHaveBeenCalledTimes(1);\n  expect(NativeModules.ExponentSecureStore.setValueWithKeyAsync).toHaveBeenCalledWith(\n    testValue,\n    testKey,\n    options\n  );\n});\n\nit(`provides default options when setting values`, async () => {\n  await SecureStore.setItemAsync('key', 'value');\n  expect(NativeModules.ExponentSecureStore.setValueWithKeyAsync).toHaveBeenCalledWith(\n    'value',\n    'key',\n    {}\n  );\n});\n\nit(`gets values`, async () => {\n  (NativeModules.ExponentSecureStore.getValueWithKeyAsync as jest.Mock).mockImplementation(\n    async () => 'value'\n  );\n\n  const options = { keychainService: 'test' };\n  const result = await SecureStore.getItemAsync('key', options);\n  expect(result).toBe('value');\n  expect(NativeModules.ExponentSecureStore.getValueWithKeyAsync).toHaveBeenCalledWith(\n    'key',\n    options\n  );\n});\n\nit(`deletes values`, async () => {\n  const options = { keychainService: 'test' };\n  await SecureStore.deleteItemAsync('key', options);\n  expect(NativeModules.ExponentSecureStore.deleteValueWithKeyAsync).toHaveBeenCalledWith(\n    'key',\n    options\n  );\n});\n\nit(`checks for invalid keys`, async () => {\n  (NativeModules.ExponentSecureStore.getValueWithKeyAsync as jest.Mock).mockImplementation(\n    async () => `unexpected value`\n  );\n\n  await expect(SecureStore.getItemAsync(null as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.getItemAsync(true as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.getItemAsync({} as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.getItemAsync((() => {}) as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.getItemAsync('@')).rejects.toMatchSnapshot();\n\n  expect(NativeModules.ExponentSecureStore.getValueWithKeyAsync).not.toHaveBeenCalled();\n});\n\nit(`checks for invalid values`, async () => {\n  await expect(SecureStore.setItemAsync('key', null as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.setItemAsync('key', true as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.setItemAsync('key', {} as any)).rejects.toMatchSnapshot();\n  await expect(SecureStore.setItemAsync('key', (() => {}) as any)).rejects.toMatchSnapshot();\n\n  expect(NativeModules.ExponentSecureStore.setValueWithKeyAsync).not.toHaveBeenCalled();\n});\n\nit(`exports accessibility options on iOS`, () => {\n  mockPlatformIOS();\n\n  expect(SecureStore.AFTER_FIRST_UNLOCK).toMatchSnapshot('AFTER_FIRST_UNLOCK');\n  expect(SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY).toMatchSnapshot(\n    'AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY'\n  );\n  expect(SecureStore.ALWAYS).toMatchSnapshot('ALWAYS');\n  expect(SecureStore.ALWAYS_THIS_DEVICE_ONLY).toMatchSnapshot('ALWAYS_THIS_DEVICE_ONLY');\n  expect(SecureStore.WHEN_UNLOCKED).toMatchSnapshot('WHEN_UNLOCKED');\n  expect(SecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY).toMatchSnapshot(\n    'WHEN_UNLOCKED_THIS_DEVICE_ONLY'\n  );\n  expect(SecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY).toMatchSnapshot(\n    'WHEN_PASSCODE_SET_THIS_DEVICE_ONLY'\n  );\n});\n"]}