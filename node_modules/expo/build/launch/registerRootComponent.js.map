{"version":3,"file":"registerRootComponent.js","sourceRoot":"","sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAEvD,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAC7C,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAapD,SAAS,gBAAgB,CACvB,gBAAyC;IAEzC,OAAO,MAAM,iBAAkB,SAAQ,KAAK,CAAC,SAAY;QACvD,kBAAkB;YAChB,UAAU,CAAC,6BAA6B,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE/E,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE;gBAC/B,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACpE;QACH,CAAC;QAED,MAAM;YACJ,IAAI,OAAO,EAAE;gBACX,OAAO,CACL,CAAC,iBAAiB,CAChB;YAAA,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EACnC;UAAA,EAAE,iBAAiB,CAAC,CACrB,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC;aAC7C;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAC3C,SAAkC;IAElC,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["import { Font } from 'expo-font';\nimport * as React from 'react';\nimport { AppRegistry, StyleSheet } from 'react-native';\n\nimport Notifications from '../Notifications';\nimport RootErrorBoundary from './RootErrorBoundary';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    errorRecovery?: any;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nfunction wrapWithExpoRoot<P extends InitialProps>(\n  AppRootComponent: React.ComponentClass<P>\n): React.ComponentClass<P> {\n  return class ExpoRootComponent extends React.Component<P> {\n    componentWillMount() {\n      StyleSheet.setStyleAttributePreprocessor('fontFamily', Font.processFontFamily);\n\n      if (this.props.exp.notification) {\n        Notifications._setInitialNotification(this.props.exp.notification);\n      }\n    }\n\n    render() {\n      if (__DEV__) {\n        return (\n          <RootErrorBoundary>\n            <AppRootComponent {...this.props} />\n          </RootErrorBoundary>\n        );\n      } else {\n        return <AppRootComponent {...this.props} />;\n      }\n    }\n  };\n}\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentClass<P>\n): void {\n  AppRegistry.registerComponent('main', () => wrapWithExpoRoot(component));\n}\n"]}