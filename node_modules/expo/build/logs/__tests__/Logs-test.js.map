{"version":3,"file":"Logs-test.js","sourceRoot":"","sources":["../../../src/logs/__tests__/Logs-test.ts"],"names":[],"mappings":"AAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE,CAAC,CAAC;IACnC,mBAAmB,EAAE,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE;QAC7C,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnD,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC;QAChC,OAAO,aAAa,CAAC;IACvB,CAAC,CAAC;CACH,CAAC,CAAC,CAAC;AAEJ,IAAI,oBAAoB,CAAC;AACzB,IAAI,qBAAqB,CAAC;AAE1B,IAAI,gBAAgB,CAAC;AAErB,UAAU,CAAC,GAAG,EAAE;IACd,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAC,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC;AAEH,SAAS,CAAC,GAAG,EAAE;IACb,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;IAClC,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACrC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAEpD,oBAAoB,EAAE,CAAC;IACvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;IACvC,oBAAoB,EAAE,CAAC;IACvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE7C,qBAAqB,EAAE,CAAC;IACxB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AACtD,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;IAChD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAEpD,oBAAoB,EAAE,CAAC;IACvB,IAAI,oBAAoB,GAAG,MAAM,CAAC,OAAO,CAAC;IAC1C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE7C,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;IACnD,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAEpD,sBAAsB;IACtB,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC","sourcesContent":["jest.mock('../RemoteConsole', () => ({\n  createRemoteConsole: jest.fn(originalConsole => {\n    let remoteConsole = Object.create(originalConsole);\n    remoteConsole.__isRemote = true;\n    return remoteConsole;\n  }),\n}));\n\nlet enableExpoCliLogging;\nlet disableExpoCliLogging;\n\nlet _originalConsole;\n\nbeforeEach(() => {\n  _originalConsole = global.console;\n  ({ enableExpoCliLogging, disableExpoCliLogging } = require('../Logs').default);\n});\n\nafterEach(() => {\n  global.console = _originalConsole;\n  jest.resetModules();\n});\n\nit(`enhances the global console`, () => {\n  expect(global.console.__isRemote).not.toBeDefined();\n\n  enableExpoCliLogging();\n  expect(global.console.__isRemote).toBe(true);\n});\n\nit(`restores the original console`, () => {\n  enableExpoCliLogging();\n  expect(global.console.__isRemote).toBe(true);\n\n  disableExpoCliLogging();\n  expect(global.console).toBe(_originalConsole);\n  expect(global.console.__isRemote).not.toBeDefined();\n});\n\nit(`doesn't fail if enabled multiple times`, () => {\n  expect(global.console.__isRemote).not.toBeDefined();\n\n  enableExpoCliLogging();\n  let firstEnhancedConsole = global.console;\n  expect(global.console.__isRemote).toBe(true);\n\n  expect(enableExpoCliLogging).not.toThrow();\n  expect(global.console.__isRemote).toBe(true);\n  expect(global.console).toBe(firstEnhancedConsole);\n});\n\nit(`doesn't fail if disabled when not enabled`, () => {\n  expect(disableExpoCliLogging).not.toThrow();\n  expect(global.console).toBe(_originalConsole);\n  expect(global.console.__isRemote).not.toBeDefined();\n\n  // Test multiple calls\n  expect(disableExpoCliLogging).not.toThrow();\n  expect(global.console).toBe(_originalConsole);\n});\n"]}